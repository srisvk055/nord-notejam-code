apiVersion: v1
kind: Service
metadata:
  name: ${project_name}
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: ${project_name}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${project_name}
  labels:
    app: ${project_name}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${project_name}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: ${project_name}
    spec:
      containers:
        - name: ${project_name}
          image: ${image_url}
          env:
            - name: NODE_ENV
              value: 'production'
            - name: PORT
              value: '3000'
            - name: PGHOST
              value: '${db_host}'
            - name: PGPORT
              value: '${db_port}'
            - name: PGDATABASE
              value: '${db_name}'
            - name: PGUSER
              value: '${db_username}'
            - name: PGPASSWORD
              value: '${db_password}'
          ports:
            - containerPort: 3000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 500m
              memory: 1000Mi
            requests:
              cpu: 250m
              memory: 500Mi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${project_name}
spec:
  backend:
    serviceName: ${project_name}
    servicePort: 80
